@model Modelo.Clientes.Cliente
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-header">
            Informe o Endereço para Entrega
        </div>
        <div class="card-body">
            @if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Count() > 0))
            {
                <div class="alert alert-danger alert-dismissible">
                    @Html.ValidationSummary(false, "Verifique os seguintes erros", new { @class = "text-danger" })
                </div>
            }
            <div class="row">
                <div class="form-group col-md-8 mb-3">
                    @Html.LabelFor(x => x.Nome,"Nome Completo", new { @class = "col-form-label"})
                    <div class="input-group">
                        @Html.EditorFor(x => x.Nome, new { htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(x => x.Nome, "", new { @class = "text-danger"})
                    </div>
                </div> 
            </div>
            <div class="row">
               <div class="form-group col-md-8 mb-3">
                   @Html.LabelFor(x => x.Rua, new { @class = "col-form-label" })
                    <div class="input-group">
                        @Html.EditorFor(x => x.Rua, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.Rua, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-2 mb-3">
                        @Html.LabelFor(x => x.Numero, new { @class = "col-form-label" })
                    <div class="input-group">
                        @Html.EditorFor(x => x.Numero, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        @Html.ValidationMessageFor(x => x.Numero, "", new { @class = "text-danger" })
                    </div>
                 </div>
            </div>
            <div class="row">
                <div class="form-group col-md-5 mb-3">
                    @Html.LabelFor(x => x.Cidade, new { @class = "col-form-label"})
                    <div class="input-group">
                        @Html.EditorFor(x => x.Cidade, new { htmlAttributes = new {@class ="form-control"}})
                        @Html.ValidationMessageFor(x => x.Cidade, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-1 mb-3">
                    @Html.LabelFor(x => x.Estado,"UF", new { @class = "col-form-label"})
                    <div class="input-group">
                        @Html.EditorFor(x => x.Estado, new { htmlAttributes = new {@class ="form-control", @maxlength = "2", @style = "text-transform:uppercase;" } })
                        @Html.ValidationMessageFor(x => x.Estado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-5 mb-3">
                    @Html.LabelFor(x => x.Bairro, new { @class = "col-form-label"})
                    <div class="input-group">
                        @Html.EditorFor(x => x.Bairro, new { htmlAttributes = new {@class ="form-control"}})
                        @Html.ValidationMessageFor(x => x.Bairro, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <input type="submit" class="btn btn-success" value="Confirmar" />
            @Html.RouteLink("Retornar","Carrinho_default",new { controller = "Carrinhos", action = "Create"},new { @class = "btn btn-secondary"})
        </div>
    </div>
}